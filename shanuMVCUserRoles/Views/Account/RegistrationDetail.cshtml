@model shanuMVCUserRoles.Models.PersonalInfo

@{
    ViewBag.Title = "RegistrationDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PersonalInfo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",  required = "required", @placeholder = @Html.DisplayNameFor(n => n.FirstName) } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required", @placeholder = @Html.DisplayNameFor(n => n.LastName) } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("StateId", (SelectList)ViewBag.States, "--Select State--", new { @class = "form-control",  required = "required", @placeholder = @Html.DisplayNameFor(n => n.State), @onchange = "FillCity()" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">

                @Html.DropDownList("CityId", new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "Name"), "--Select City--", new { @class = "form-control", required = "required", @placeholder = @Html.DisplayNameFor(n => n.City) })

            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("BloodGroupId", (SelectList)ViewBag.BloodGroups, "--Select Blood Group--", new { @class = "form-control", required = "required", @placeholder = @Html.DisplayNameFor(n => n.BloodGroup) })
                @Html.ValidationMessageFor(model => model.BloodGroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Something about you" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

 
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src='//cdn.tinymce.com/4/tinymce.min.js'></script>
<script src="https://ajax.googleapis.com/ajax/libs/prototype/1.7.0.0/prototype.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/scriptaculous/1.9.0/scriptaculous.js" type="text/javascript"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

     <script type="text/javascript">

        function FillCity() {

            var stateId = $('#StateId').val();
          
            $.ajax({
                url: 'http://localhost:5580/Account/FillCity',
                type: "GET",
                dataType: "JSON",
                data: { State: stateId },
                success: function (cities) {
                    $("#CityId").html(""); // clear before appending new list

                    $("#CityId").append(
                        $('<option></option>').val(0).html('--Select City--'));


                    $.each(cities, function (i, city) {
                        $("#CityId").append(
                            $('<option></option>').val(city.CityId).html(city.Name));
                    });
                }
            });
        }
</script>
  
     <script type="text/javascript">

        tinymce.init({
            selector: '#Description',
        });

        // Load the Google Transliterate API
        google.load("elements", "1", {
            packages: "transliteration"
        });

        function onLoad() {
            var options = {
                sourceLanguage: google.elements.transliteration.LanguageCode.ENGLISH,
                destinationLanguage: [google.elements.transliteration.LanguageCode.HINDI],
                shortcutKey: 'ctrl+e',
                transliterationEnabled: true
            };

            // Create an instance on TransliterationControl with the required
            // options.
            var control =
            new google.elements.transliteration.TransliterationControl(options);

            // Enable transliteration in the textbox with id
            // 'transliterateTextarea'.
            control.makeTransliteratable(['Description_ifr']);//tinymce
            var postValue = document.getElementById("Description_ifr");
        }
        google.setOnLoadCallback(onLoad);

    </script>
 
    <script src="http://code.jquery.com/jquery-1.11.0.min.js" type="text/javascript" charset="utf-8"></script>

}


